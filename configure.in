dnl
dnl VTun - Virtual Tunnel over TCP/IP network.
dnl Copyright (C) 1998-2016  Maxim Krasnyansky <max_mk@yahoo.com>
dnl
dnl $Id: configure.in,v 1.19.2.4 2016/10/01 21:46:01 mtbishop Exp $
dnl
dnl Process this file with autoconf to produce a configure script.
dnl

AC_INIT([vtun],[3]) dnl this needs to change via variables as in the tail
AC_CONFIG_HEADERS([config.h])

dnl SOCKS support
AC_ARG_ENABLE(socks,
   --enable-socks     	   Compile with SOCKS support,
   SOCKS=$enableval,
   SOCKS=no
)

dnl Delayed UDP Start support
AC_ARG_ENABLE(nathack,
   --disable-nathack	   Do not enable Nat Hack code,
   NATHACK=$enableval,
   NATHACK=yes
)

AC_ARG_WITH(socks-lib,
   --with-socks-lib=DIR         SOCKS Library location,
   LIBS="$LIBS -L$withval" 
)

dnl Guess host type.
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl Check for programs.
AC_PROG_LEX
AC_PROG_CC
AC_PROG_INSTALL

AC_ARG_VAR([BISON], [bison command for yacc parsing])
AC_CHECK_PROG([BISON], [bison -y], [bison -y], [no])
AS_IF([test "x$BISON" = "xno"], [AC_MSG_ERROR([bison not found])])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl Check for header files.
m4_warn([obsolete],
[The preprocessor macro 'STDC_HEADERS' is obsolete.
  Except in unusual embedded environments, you can safely include all
  C89 headers unconditionally.])dnl
# Autoupdate added the next two lines to ensure that your configure
# script's behavior did not change.  They are probably safe to remove.
AC_CHECK_INCLUDES_DEFAULT
AC_PROG_EGREP

AC_CHECK_HEADERS(sys/resource.h netdb.h sched.h resolv.h arpa/inet.h)
AC_CHECK_HEADERS(netinet/ip.h netinet/in.h netinet/tcp.h netinet/in_systm.h)
AC_CHECK_HEADERS(libutil.h sys/sockio.h)

dnl Check for libsocket
AC_SEARCH_LIBS(socket, socket)

dnl Check for libnsl
AC_SEARCH_LIBS(inet_ntoa, nsl)

dnl Check for libresolv
AC_SEARCH_LIBS(gethostbyname, resolv nsl)

dnl Check for librt
AC_SEARCH_LIBS(nanosleep, rt posix4)

dnl Check for setproctitle in libutil
AC_SEARCH_LIBS(setproctitle, util bsd, AC_DEFINE(HAVE_SETPROC_TITLE, [1], [Define to 1 if you have setproctitle() function]) )

AC_CHECK_FUNCS([setproctitle_init])

dnl Check for fork() (fallback to vfork() on non-MMU systems)
AC_FUNC_FORK

if test "$NATHACK" = "yes"; then
   AC_DEFINE(ENABLE_NAT_HACK, [1], [Define to 1 if you want to enable Nat Hack code])
fi

if test "$SOCKS" = "yes"; then
   AC_MSG_RESULT()
   AS_MESSAGE([checking for SOCKS Library ... ...])
   AC_CHECK_LIB(socks5, SOCKSconnect,
        [
	  CFLAGS="$CFLAGS -DVTUN_SOCKS=1"
	  LIBS="$LIBS -lsocks5"
	],
        AC_CHECK_LIB(socks, Rconnect,
	    [
	       CFLAGS="$CFLAGS -DVTUN_SOCKS=2"
	       LIBS="$LIBS -lsocks"
	    ],
	    AC_MSG_ERROR( SOCKS library not found. )
        )
   )
fi

AC_MSG_RESULT()

AC_CHECK_PROG(CARGO, cargo, cargo)
if test "x$CARGO" = "x"; then
    AC_MSG_ERROR([Requires cargo to compile rust modules])
fi

AC_CHECK_PROG(STRIP, strip, strip)
if test "x$STRIP" = "x"; then
    AC_MSG_ERROR([Requires strip to install binaries])
fi

AC_CHECK_FUNCS([getpt grantpt unlockpt ptsname])

OS_REL=`uname -r | tr -d '[A-Za-z\-\_\.]'`
case $host_os in
	*linux*)
	     OS_DIR="linux"
	     AC_CHECK_HEADERS(linux/if_tun.h)
	     ;;
	*solaris*)
	     OS_DIR="svr4"
	     ;;
	*freebsd*)
	     if test "$OS_REL" -ge "40"; then 
	        OS_DIR="freebsd"
	     fi
	     ;;
	*openbsd*)
	     if test "$OS_REL" -ge "25"; then 
	        OS_DIR="openbsd"
	     fi
	     ;;
esac	     
AC_LINK_DRV(`cat vtun.drivers`, $OS_DIR)

AC_MSG_RESULT()

dnl Build release name
changequote(<,>)
REL=`echo 'BRANCH-3_X' | tr -d '$: \-' | sed 's/^[A-Za-z]*//' | sed 's/\_/\./'`
changequote([,])

AC_DEFINE_UNQUOTED(VTUN_VER, "$REL `date '+%m/%d/%Y'`", [Vtun version])

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
